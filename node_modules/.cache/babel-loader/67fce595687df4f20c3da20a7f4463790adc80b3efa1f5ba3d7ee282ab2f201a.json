{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\fe3-final\\\\src\\\\Components\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useUserStates } from '../Components/utils/global.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  item\n}) => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useUserStates();\n\n  /* const addFav = ()=>{\n     // Accedo a localStorage y obtengo los favoritos actuales (si existen)\n     const isAlreadyFav = state.favs.some((favItem) => favItem.id === item.id);\n      if (!isAlreadyFav) {\n     dispatch({ type: 'ADD_FAV', payload: item })\n     alert('¡Añadido a favoritos!');\n   } else {\n       alert('¡Este elemento ya está en tus favoritos!');\n     }\n  \n   } */\n\n  const toggleFav = () => {\n    // Accedo a localStorage y obtengo los favoritos actuales (si existen)\n    dispatch({\n      type: 'TOGGLE_FAV',\n      payload: item\n    });\n    alert('¡Se ha quitado de tus favoritos!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/detail/' + item.id /* En cada card deberan mostrar en name - username y el id */,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: \"public\\\\images\\\\doctor.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item.name + item.username + item.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFav,\n      className: \"favButton\",\n      children: \"\\u2B50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"mzP3eLH4CGgFbKheHLDCO0whOUA=\", false, function () {\n  return [useUserStates];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Link","useUserStates","jsxDEV","_jsxDEV","Card","item","_s","state","dispatch","toggleFav","type","payload","alert","className","children","to","id","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","username","onClick","_c","$RefreshReg$"],"sources":["C:/Users/camil/fe3-final/src/Components/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom' \nimport { useUserStates } from '../Components/utils/global.context';\n\n\n  const Card = ({ item}) => {\n    const { state, dispatch } = useUserStates();\n\n /* const addFav = ()=>{\n    // Accedo a localStorage y obtengo los favoritos actuales (si existen)\n    const isAlreadyFav = state.favs.some((favItem) => favItem.id === item.id);\n\n    if (!isAlreadyFav) {\n    dispatch({ type: 'ADD_FAV', payload: item })\n    alert('¡Añadido a favoritos!');\n  } else {\n      alert('¡Este elemento ya está en tus favoritos!');\n    }\n \n  } */\n\n  const toggleFav = () => {\n    // Accedo a localStorage y obtengo los favoritos actuales (si existen)\n    dispatch({ type: 'TOGGLE_FAV', payload: item });\n    alert('¡Se ha quitado de tus favoritos!');\n  }\n\n  return (\n    <div className=\"card\">\n        <Link to={'/detail/' + item.id} /* En cada card deberan mostrar en name - username y el id */> \n        <img src={item.image} alt=\"public\\images\\doctor.jpg\" />\n        <h4>{item.name + item.username + item.id}</h4> \n\n        </Link>\n\n        <button onClick={toggleFav} className=\"favButton\">⭐</button>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjE,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACxB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,aAAa,CAAC,CAAC;;EAE9C;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAEN;IAAK,CAAC,CAAC;IAC/CO,KAAK,CAAC,kCAAkC,CAAC;EAC3C,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBX,OAAA,CAACH,IAAI;MAACe,EAAE,EAAE,UAAU,GAAGV,IAAI,CAACW,EAAG,CAAC;MAAAF,QAAA,gBAChCX,OAAA;QAAKc,GAAG,EAAEZ,IAAI,CAACa,KAAM;QAACC,GAAG,EAAC;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDpB,OAAA;QAAAW,QAAA,EAAKT,IAAI,CAACmB,IAAI,GAAGnB,IAAI,CAACoB,QAAQ,GAAGpB,IAAI,CAACW;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExC,CAAC,eAEPpB,OAAA;MAAQuB,OAAO,EAAEjB,SAAU;MAACI,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCMF,IAAI;EAAA,QACoBH,aAAa;AAAA;AAAA0B,EAAA,GADrCvB,IAAI;AAmCZ,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}