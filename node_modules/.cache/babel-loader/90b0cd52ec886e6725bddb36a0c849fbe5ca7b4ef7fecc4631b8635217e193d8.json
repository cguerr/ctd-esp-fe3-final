{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\fe3-final\\\\src\\\\Components\\\\Card.jsx\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\n\n//const Card = ({ name, username, id }) => {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  item\n}) => {\n  const addFav = () => {\n    // Aqui iria la logica para agregar la Card en el localStorage\n    // Acceder al localStorage y obtener los favoritos actuales (si existen)\n    const favsFromStorage = JSON.parse(localStorage.getItem('favs')) || [];\n\n    // Verificar si el item ya está en favoritos\n    const isAlreadyFav = favsFromStorage.some(favItem => favItem.id === item.id);\n    if (!isAlreadyFav) {\n      // Si el item no está en favoritos, agregarlo\n      const updatedFavs = [...favsFromStorage, item];\n      localStorage.setItem('favs', JSON.stringify(updatedFavs));\n      alert('Añadido a favoritos');\n    } else {\n      // Si el item ya está en favoritos, mostrar un mensaje (o realizar otra lógica)\n      alert('¡Este elemento ya está en tus favoritos!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/detail/' + item.id /* En cada card deberan mostrar en name - username y el id */,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: \"public\\\\images\\\\doctor.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item.name + item.username + item.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFav,\n      className: \"favButton\",\n      children: \"\\u2B50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Card","item","addFav","favsFromStorage","JSON","parse","localStorage","getItem","isAlreadyFav","some","favItem","id","updatedFavs","setItem","stringify","alert","className","children","to","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","username","onClick","_c","$RefreshReg$"],"sources":["C:/Users/camil/fe3-final/src/Components/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom' \n\n//const Card = ({ name, username, id }) => {\n  const Card = ({ item}) => {\n\n  const addFav = ()=>{\n    // Aqui iria la logica para agregar la Card en el localStorage\n    // Acceder al localStorage y obtener los favoritos actuales (si existen)\n    const favsFromStorage = JSON.parse(localStorage.getItem('favs')) || [];\n\n    // Verificar si el item ya está en favoritos\n    const isAlreadyFav = favsFromStorage.some((favItem) => favItem.id === item.id);\n\n    if (!isAlreadyFav) {\n      // Si el item no está en favoritos, agregarlo\n      const updatedFavs = [...favsFromStorage, item];\n      localStorage.setItem('favs', JSON.stringify(updatedFavs));\n      alert('Añadido a favoritos');\n    } else {\n      // Si el item ya está en favoritos, mostrar un mensaje (o realizar otra lógica)\n      alert('¡Este elemento ya está en tus favoritos!');\n    }\n  }\n\n  return (\n    <div className=\"card\">\n        <Link to={'/detail/' + item.id} /* En cada card deberan mostrar en name - username y el id */> \n        <img src={item.image} alt=\"public\\images\\doctor.jpg\" />\n        <h4>{item.name + item.username + item.id}</h4> \n\n        </Link>\n        \n\n        {/* No debes olvidar que la Card a su vez servira como Link hacia la pagina de detalle */}\n\n        {/* Ademas deberan integrar la logica para guardar cada Card en el localStorage */}\n        <button onClick={addFav} className=\"favButton\">⭐</button>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACE,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAI;IACjB;IACA;IACA,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;;IAEtE;IACA,MAAMC,YAAY,GAAGL,eAAe,CAACM,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKV,IAAI,CAACU,EAAE,CAAC;IAE9E,IAAI,CAACH,YAAY,EAAE;MACjB;MACA,MAAMI,WAAW,GAAG,CAAC,GAAGT,eAAe,EAAEF,IAAI,CAAC;MAC9CK,YAAY,CAACO,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACF,WAAW,CAAC,CAAC;MACzDG,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,MAAM;MACL;MACAA,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBlB,OAAA,CAACF,IAAI;MAACqB,EAAE,EAAE,UAAU,GAAGjB,IAAI,CAACU,EAAG,CAAC;MAAAM,QAAA,gBAChClB,OAAA;QAAKoB,GAAG,EAAElB,IAAI,CAACmB,KAAM;QAACC,GAAG,EAAC;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvD1B,OAAA;QAAAkB,QAAA,EAAKhB,IAAI,CAACyB,IAAI,GAAGzB,IAAI,CAAC0B,QAAQ,GAAG1B,IAAI,CAACU;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExC,CAAC,eAMP1B,OAAA;MAAQ6B,OAAO,EAAE1B,MAAO;MAACc,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACI,EAAA,GApCM7B,IAAI;AAsCZ,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}