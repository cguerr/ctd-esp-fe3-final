{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\fe3-final\\\\src\\\\Components\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useUserStates } from '../Components/utils/global.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  item\n}) => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useUserStates();\n  const toggleFav = () => {\n    // Accedo a localStorage y obtengo los favoritos actuales (si existen)\n    dispatch({\n      type: 'TOGGLE_FAV',\n      payload: item\n    });\n    const isFav = state.favs.some(favItem => favItem.id === item.id);\n    if (isFav) {\n      alert('¡Se ha quitado de favoritos!');\n    } else {\n      alert('¡Añadido a favoritos!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/detail/' + item.id /* En cada card deberan mostrar en name - username y el id */,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card\",\n        src: '/images/doctor.jpg',\n        alt: \"Dentista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \".card-grid\",\n        children: [\"ID: \", item.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Name: \", item.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"User name: \", item.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFav,\n      className: \"favButton\",\n      children: \"\\u2B50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"mzP3eLH4CGgFbKheHLDCO0whOUA=\", false, function () {\n  return [useUserStates];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Link","useUserStates","jsxDEV","_jsxDEV","Card","item","_s","state","dispatch","toggleFav","type","payload","isFav","favs","some","favItem","id","alert","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","username","onClick","_c","$RefreshReg$"],"sources":["C:/Users/camil/fe3-final/src/Components/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom' \nimport { useUserStates } from '../Components/utils/global.context';\n\n\n  const Card = ({ item}) => {\n    const { state, dispatch } = useUserStates();\n\n\n  const toggleFav = () => {\n    // Accedo a localStorage y obtengo los favoritos actuales (si existen)\n    dispatch({ type: 'TOGGLE_FAV', payload: item });\n\n    const isFav = state.favs.some((favItem) => favItem.id === item.id);\n    if (isFav) {\n    alert('¡Se ha quitado de favoritos!');\n  } else {\n    alert('¡Añadido a favoritos!')\n  }\n}\n\n  return (\n    <div className=\"card\">\n        <Link to={'/detail/' + item.id} /* En cada card deberan mostrar en name - username y el id */> \n        <img className=\"card\" src={'/images/doctor.jpg'} alt=\"Dentista\" />\n        \n        <h4 className=\".card-grid\">ID: {item.id}</h4>   \n        <h4>Name: {item.name}</h4>  \n        <h4>User name: {item.username}</h4>  \n\n        </Link>\n\n        <button onClick={toggleFav} className=\"favButton\">⭐</button>\n    </div>\n  );\n}\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjE,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACxB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,aAAa,CAAC,CAAC;EAG7C,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAEN;IAAK,CAAC,CAAC;IAE/C,MAAMO,KAAK,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKX,IAAI,CAACW,EAAE,CAAC;IAClE,IAAIJ,KAAK,EAAE;MACXK,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,MAAM;MACLA,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAEC,oBACEd,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBhB,OAAA,CAACH,IAAI;MAACoB,EAAE,EAAE,UAAU,GAAGf,IAAI,CAACW,EAAG,CAAC;MAAAG,QAAA,gBAChChB,OAAA;QAAKe,SAAS,EAAC,MAAM;QAACG,GAAG,EAAE,oBAAqB;QAACC,GAAG,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElEvB,OAAA;QAAIe,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,MAAI,EAACd,IAAI,CAACW,EAAE;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7CvB,OAAA;QAAAgB,QAAA,GAAI,QAAM,EAACd,IAAI,CAACsB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BvB,OAAA;QAAAgB,QAAA,GAAI,aAAW,EAACd,IAAI,CAACuB,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC,eAEPvB,OAAA;MAAQ0B,OAAO,EAAEpB,SAAU;MAACS,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAApB,EAAA,CA9BOF,IAAI;EAAA,QACoBH,aAAa;AAAA;AAAA6B,EAAA,GADrC1B,IAAI;AAgCZ,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}