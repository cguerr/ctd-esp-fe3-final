{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, /*useState,*/useReducer, useEffect, useContext } from 'react';\n//import { reducer } from \"../src/reducers/reducer\";\nimport { reducer } from '../../reducers/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserStates = /*#__PURE__*/createContext();\nexport const initialState = {\n  list: [],\n  favs: [],\n  theme: \"light\"\n  //data: []\n};\n\nexport const ContextGlobal = /*#__PURE__*/createContext(); //PARA QUE LA USABA???\n\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  //const [state, setState] = useState(initialState);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(state); //DESPUES SACARLO\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEffect(() => {\n    axios(url).then(res => dispatch({\n      type: 'GET_USERS',\n      payload: res.data\n    }));\n  }, []);\n\n  /*ESTO DE ABAJO NO ANDA VER SI LO SACO O LO ARREGLO\n    const toggleTheme = () => {\n      setState((prevState) => ({\n        ...prevState,\n        theme: prevState.theme === 'light' ? 'dark' : 'light',\n      }));\n    };\n  HASTA ACA*/\n\n  return (\n    /*#__PURE__*/\n    //<ContextGlobal.Provider value={{state, setState, toggleTheme}}>\n    _jsxDEV(UserStates.Provider, {\n      value: {\n        state,\n        dispatch\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n    // </ContextGlobal.Provider>\n  );\n};\n_s(ContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useUserStates = () => {\n  _s2();\n  return useContext(UserStates);\n};\n_s2(useUserStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["axios","createContext","useReducer","useEffect","useContext","reducer","jsxDEV","_jsxDEV","UserStates","initialState","list","favs","theme","ContextGlobal","ContextProvider","children","_s","state","dispatch","console","log","url","then","res","type","payload","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserStates","_s2","$RefreshReg$"],"sources":["C:/Users/camil/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { createContext, /*useState,*/ useReducer, useEffect, useContext } from 'react';\n//import { reducer } from \"../src/reducers/reducer\";\nimport { reducer } from '../../reducers/reducer'; \n\n\nconst UserStates = createContext()\n\nexport const initialState = {\n  list: [],\n  favs: [],\n  theme: \"light\", \n  //data: []\n};\n\nexport const ContextGlobal = createContext();   //PARA QUE LA USABA???\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  //const [state, setState] = useState(initialState);\n  const [state, dispatch] = useReducer(reducer, initialState)\n  console.log(state)  //DESPUES SACARLO\n  const url ='https://jsonplaceholder.typicode.com/users'\n\n  useEffect(() => {\n    axios(url)\n    .then(res => dispatch({type: 'GET_USERS', payload: res.data}))\n}, [])\n\n/*ESTO DE ABAJO NO ANDA VER SI LO SACO O LO ARREGLO\n  const toggleTheme = () => {\n    setState((prevState) => ({\n      ...prevState,\n      theme: prevState.theme === 'light' ? 'dark' : 'light',\n    }));\n  };\nHASTA ACA*/\n\n\n  return (\n    //<ContextGlobal.Provider value={{state, setState, toggleTheme}}>\n    <UserStates.Provider value={{state, dispatch}}>\n      {children}\n    </UserStates.Provider>\n   // </ContextGlobal.Provider>\n  )\n}\n\nexport default ContextProvider\n\nexport const useUserStates = () => useContext(UserStates)\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAE,aAAcC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACtF;AACA,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,UAAU,gBAAGP,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMQ,YAAY,GAAG;EAC1BC,IAAI,EAAE,EAAE;EACRC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;EACP;AACF,CAAC;;AAED,OAAO,MAAMC,aAAa,gBAAGZ,aAAa,CAAC,CAAC,CAAC,CAAG;;AAEhD,OAAO,MAAMa,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,UAAU,CAACG,OAAO,EAAEI,YAAY,CAAC;EAC3DU,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC,EAAE;EACpB,MAAMI,GAAG,GAAE,4CAA4C;EAEvDlB,SAAS,CAAC,MAAM;IACdH,KAAK,CAACqB,GAAG,CAAC,CACTC,IAAI,CAACC,GAAG,IAAIL,QAAQ,CAAC;MAACM,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEF,GAAG,CAACG;IAAI,CAAC,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;;EAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE;IAAA;IACE;IACAnB,OAAA,CAACC,UAAU,CAACmB,QAAQ;MAACC,KAAK,EAAE;QAACX,KAAK;QAAEC;MAAQ,CAAE;MAAAH,QAAA,EAC3CA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;IACtB;EAAA;AAEH,CAAC;AAAAhB,EAAA,CA7BYF,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AA+B5B,eAAeA,eAAe;AAE9B,OAAO,MAAMoB,aAAa,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM/B,UAAU,CAACI,UAAU,CAAC;AAAA;AAAA2B,GAAA,CAA5CD,aAAa;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}